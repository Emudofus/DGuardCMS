<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Dungeon', 'others');

/**
 * BaseDungeon
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $startmap
 * @property integer $mapid
 * @property integer $cellid
 * @property Map $Map
 * 
 * @method integer getStartmap() Returns the current record's "startmap" value
 * @method integer getMapid()    Returns the current record's "mapid" value
 * @method integer getCellid()   Returns the current record's "cellid" value
 * @method Map     getMap()      Returns the current record's "Map" value
 * @method Dungeon setStartmap() Sets the current record's "startmap" value
 * @method Dungeon setMapid()    Sets the current record's "mapid" value
 * @method Dungeon setCellid()   Sets the current record's "cellid" value
 * @method Dungeon setMap()      Sets the current record's "Map" value
 * 
 * @package    DGuardCMS
 * @subpackage model
 * @author     Andaeriel
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDungeon extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('dungeon');
        $this->hasColumn('startmap', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('mapid', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('cellid', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Map', array(
             'local' => 'mapid',
             'foreign' => 'id'));
    }
}
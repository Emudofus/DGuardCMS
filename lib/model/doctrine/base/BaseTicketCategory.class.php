<?php

/**
 * BaseTicketCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property int $id
 * @property varchar $name
 * @property varchar $icon
 * @property text $description
 * @property Doctrine_Collection $Tickets
 * 
 * @method int                 getId()          Returns the current record's "id" value
 * @method varchar             getName()        Returns the current record's "name" value
 * @method varchar             getIcon()        Returns the current record's "icon" value
 * @method text                getDescription() Returns the current record's "description" value
 * @method Doctrine_Collection getTickets()     Returns the current record's "Tickets" collection
 * @method TicketCategory      setId()          Sets the current record's "id" value
 * @method TicketCategory      setName()        Sets the current record's "name" value
 * @method TicketCategory      setIcon()        Sets the current record's "icon" value
 * @method TicketCategory      setDescription() Sets the current record's "description" value
 * @method TicketCategory      setTickets()     Sets the current record's "Tickets" collection
 * 
 * @package    DGuardCMS
 * @subpackage model
 * @author     Andaeriel
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTicketCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ticket_category');
        $this->hasColumn('id', 'int', 9, array(
             'type' => 'int',
             'length' => 9,
             ));
        $this->hasColumn('name', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('icon', 'varchar', 40, array(
             'type' => 'varchar',
             'length' => 40,
             ));
        $this->hasColumn('description', 'text', null, array(
             'type' => 'text',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Ticket as Tickets', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'hasManyRoots' => true,
             ));
        $this->actAs($nestedset0);
    }
}
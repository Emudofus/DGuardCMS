<?php

/**
 * Account
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    DGuardCMS
 * @subpackage model
 * @author     Andaeriel
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Account extends BaseAccount
{
	protected $voted = array(),
			$canVote = array(),
			$options = false;

	public function hasCommented(Article $article)
	{
		foreach ($this->Comments as $comment)
		{
			if ($comment->Article == $article)
			{
				return true;
			}
		}
		return false;
	}

	public function hasVoted(Poll $poll)
	{
		if (false === $this->options)
		{
			$this->options = array();
			foreach ($this->Votes as $vote)
			{
				$this->options[] = $vote->Option['id'];
			}
		}
		if (!isset($this->voted[$poll->getId()]))
		{
			foreach ($poll->Options as $option)
			{
				if (in_array($option->getId(), $this->options))
				{
					$this->voted[$poll->getId()] = true;
					break;
				}
			}
			if (!isset($this->voted[$poll->getId()]))
			{
				$this->voted[$poll->getId()] = false;
			}
		}
		return $this->voted[$poll->getId()];
	}
	public function canVote(Poll $poll)
	{
		if (!isset($this->canVote[$poll->getId()]))
		{
			$this->canVote[$poll->getId()] = !$this->hasVoted($poll)
			//today is AFTER date start & before date end
			 && time() > strtotime($poll->getDateStart()) && time() < strtotime($poll->getDateEnd());
		}
		return $this->canVote[$poll->getId()];
	}

	public function addPoints($points)
	{
		$this->_set('points', $this->_get('points') + $points);
	}
}

<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Comment', 'accounts');

/**
 * BaseComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $article_id
 * @property integer $author_id
 * @property text $content
 * @property Account $Author
 * @property Article $Article
 * 
 * @method integer getArticleId()  Returns the current record's "article_id" value
 * @method integer getAuthorId()   Returns the current record's "author_id" value
 * @method text    getContent()    Returns the current record's "content" value
 * @method Account getAuthor()     Returns the current record's "Author" value
 * @method Article getArticle()    Returns the current record's "Article" value
 * @method Comment setArticleId()  Sets the current record's "article_id" value
 * @method Comment setAuthorId()   Sets the current record's "author_id" value
 * @method Comment setContent()    Sets the current record's "content" value
 * @method Comment setAuthor()     Sets the current record's "Author" value
 * @method Comment setArticle()    Sets the current record's "Article" value
 * 
 * @package    DGuardCMS
 * @subpackage model
 * @author     Andaeriel
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comment');
        $this->hasColumn('article_id', 'integer', 9, array(
             'type' => 'integer',
             'length' => 9,
             ));
        $this->hasColumn('author_id', 'integer', 9, array(
             'type' => 'integer',
             'length' => 9,
             ));
        $this->hasColumn('content', 'text', null, array(
             'type' => 'text',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Account as Author', array(
             'local' => 'author_id',
             'foreign' => 'id'));

        $this->hasOne('Article', array(
             'local' => 'article_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}
<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Poll', 'accounts');

/**
 * BasePoll
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property date $date_start
 * @property date $date_end
 * @property Doctrine_Collection $Options
 * 
 * @method string              getName()       Returns the current record's "name" value
 * @method date                getDateStart()  Returns the current record's "date_start" value
 * @method date                getDateEnd()    Returns the current record's "date_end" value
 * @method Doctrine_Collection getOptions()    Returns the current record's "Options" collection
 * @method Poll                setName()       Sets the current record's "name" value
 * @method Poll                setDateStart()  Sets the current record's "date_start" value
 * @method Poll                setDateEnd()    Sets the current record's "date_end" value
 * @method Poll                setOptions()    Sets the current record's "Options" collection
 * 
 * @package    DGuardCMS
 * @subpackage model
 * @author     Andaeriel
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePoll extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('poll');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('date_start', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('date_end', 'date', null, array(
             'type' => 'date',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('PollOption as Options', array(
             'local' => 'id',
             'foreign' => 'poll_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'updated' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($timestampable0);
    }
}
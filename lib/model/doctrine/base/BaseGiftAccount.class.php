<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('GiftAccount', 'accounts');

/**
 * BaseGiftAccount
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property int $gift_id
 * @property int $account_id
 * @property Account $Account
 * @property GiftTemplate $Gift
 * 
 * @method int          getGiftId()     Returns the current record's "gift_id" value
 * @method int          getAccountId()  Returns the current record's "account_id" value
 * @method Account      getAccount()    Returns the current record's "Account" value
 * @method GiftTemplate getGift()       Returns the current record's "Gift" value
 * @method GiftAccount  setGiftId()     Sets the current record's "gift_id" value
 * @method GiftAccount  setAccountId()  Sets the current record's "account_id" value
 * @method GiftAccount  setAccount()    Sets the current record's "Account" value
 * @method GiftAccount  setGift()       Sets the current record's "Gift" value
 * 
 * @package    DGuardCMS
 * @subpackage model
 * @author     Andaeriel
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGiftAccount extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('accounts_gifts');
        $this->hasColumn('gift_id', 'int', null, array(
             'type' => 'int',
             ));
        $this->hasColumn('account_id', 'int', null, array(
             'type' => 'int',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Account', array(
             'local' => 'account_id',
             'foreign' => 'id'));

        $this->hasOne('GiftTemplate as Gift', array(
             'local' => 'gift_id',
             'foreign' => 'id'));
    }
}
<?php

/**
 * BaseTicket
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property int $id
 * @property int $category_id
 * @property enum $state
 * @property varchar $name
 * @property TicketCategory $Category
 * @property Doctrine_Collection $Answers
 * 
 * @method int                 getId()          Returns the current record's "id" value
 * @method int                 getCategoryId()  Returns the current record's "category_id" value
 * @method enum                getState()       Returns the current record's "state" value
 * @method varchar             getName()        Returns the current record's "name" value
 * @method TicketCategory      getCategory()    Returns the current record's "Category" value
 * @method Doctrine_Collection getAnswers()     Returns the current record's "Answers" collection
 * @method Ticket              setId()          Sets the current record's "id" value
 * @method Ticket              setCategoryId()  Sets the current record's "category_id" value
 * @method Ticket              setState()       Sets the current record's "state" value
 * @method Ticket              setName()        Sets the current record's "name" value
 * @method Ticket              setCategory()    Sets the current record's "Category" value
 * @method Ticket              setAnswers()     Sets the current record's "Answers" collection
 * 
 * @package    DGuardCMS
 * @subpackage model
 * @author     Andaeriel
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTicket extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ticket');
        $this->hasColumn('id', 'int', 9, array(
             'type' => 'int',
             'length' => 9,
             ));
        $this->hasColumn('category_id', 'int', 9, array(
             'type' => 'int',
             'length' => 9,
             ));
        $this->hasColumn('state', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'locked',
              1 => 'to do',
              2 => 'resolved',
              3 => 'resolving',
              4 => 'deleted',
             ),
             ));
        $this->hasColumn('name', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TicketCategory as Category', array(
             'local' => 'category_id',
             'foreign' => 'id'));

        $this->hasMany('TicketAnswer as Answers', array(
             'local' => 'id',
             'foreign' => 'ticket_id'));
    }
}